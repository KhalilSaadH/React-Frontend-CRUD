{"version":3,"sources":["services/EmployeeService.js","components/ListEmployeeComponent.jsx","components/HeaderComponent.jsx","components/FooterComponent.jsx","components/CreateEmployeeComponent.jsx","components/UpdateEmployeeComponent.jsx","components/ViewEmployeeComponent.jsx","App.js","reportWebVitals.js","index.js"],"names":["EMPLOYEE_API_BASE_URL","axios","get","employee","post","employeeId","put","delete","ListEmployeeComponent","props","state","employees","addEmployee","bind","editEmployee","deleteEmployee","id","this","history","push","EmployeeService","then","res","window","location","reload","getEmployees","setState","data","className","onClick","map","firstName","lastName","email","type","style","margin","viewEmployee","Component","HeaderComponent","href","FooterComponent","CreateEmployeeComponent","saveEmployee","e","preventDefault","console","log","JSON","stringify","createEmployee","changeFirstNameHandler","event","target","value","changeLastNameHandler","changeEmailHandler","placeholder","name","onChange","cancel","marginLeft","UpdateEmployeeComponent","updateEmployee","match","params","getEmployeeById","ViewEmployeeComponent","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4809441b.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst EMPLOYEE_API_BASE_URL=\"https://spring-boot-api-java.herokuapp.com/api/v1/employees\";\r\nclass EmployeeService{\r\n   getEmployees(){\r\n       return axios.get(EMPLOYEE_API_BASE_URL);\r\n   }\r\n   createEmployee(employee){\r\n       return axios.post(EMPLOYEE_API_BASE_URL, employee);\r\n   }\r\n   getEmployeeById(employeeId){\r\n       return axios.get(EMPLOYEE_API_BASE_URL +'/'+ employeeId);\r\n   } \r\n   updateEmployee(employee, employeeId){\r\n       return axios.put(EMPLOYEE_API_BASE_URL +'/'+ employeeId, employee);\r\n\r\n   }\r\n   deleteEmployee(employeeId){\r\n    return axios.delete(EMPLOYEE_API_BASE_URL +'/'+ employeeId);\r\n\r\n}\r\n}\r\nexport default new EmployeeService()","import React, { Component } from 'react';\r\n//import { withRouter } from 'react-router-dom';\r\nimport EmployeeService from '../services/EmployeeService';\r\n\r\nclass ListEmployeeComponent extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            employees: []\r\n        }\r\n        \r\n        this.addEmployee=this.addEmployee.bind(this);\r\n        this.editEmployee=this.editEmployee.bind(this);\r\n        this.deleteEmployee=this.deleteEmployee.bind(this);\r\n    }\r\n    viewEmployee(id){\r\n        this.props.history.push(`/React-Frontend-CRUD/view-employee/${id}`);\r\n    }\r\n    deleteEmployee(id){\r\n        EmployeeService.deleteEmployee(id).then((res)=>{\r\n            window.location.reload()});\r\n    }\r\n    editEmployee(id){\r\n        this.props.history.push(`/React-Frontend-CRUD/update-employee/${id}`);\r\n    }\r\n    componentDidMount(){\r\n        EmployeeService.getEmployees().then((res) => { \r\n        this.setState({employees: res.data});\r\n        });\r\n    }\r\n    addEmployee(){\r\n        this.props.history.push('/React-Frontend-CRUD/add-employee');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2 className=\"text-center\">Employees List</h2>\r\n                <div className=\"row\">\r\n                    <button className=\"btn btn-primary\" onClick={this.addEmployee}>Add Employee</button>\r\n\r\n                </div>\r\n                <div className=\"table-responsive w-100\">\r\n                    <table className=\"table table-striped table-bordered\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>First name</th>\r\n                                <th>Last name</th>\r\n                                <th>Email</th>\r\n                                <th>Actions</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                this.state.employees.map(\r\n                                    employee=>\r\n                                    <tr key={employee.id}>\r\n                                        <td>{employee.firstName}</td>\r\n                                        <td>{employee.lastName}</td>\r\n                                        <td>{employee.email}</td>\r\n                                        <td>\r\n                                            <button type=\"button\" style={{margin: '0 5px'}} onClick={()=> this.editEmployee(employee.id)} className=\"btn btn-success\">Update</button>\r\n                                            <button type=\"button\" style={{margin: '0 5px'}} onClick={()=> this.deleteEmployee(employee.id)} className=\"btn btn-danger\">Delete</button>\r\n                                            <button type=\"button\" style={{margin: '0 5px'}} onClick={()=> this.viewEmployee(employee.id)} className=\"btn btn-info\">View</button>\r\n\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ListEmployeeComponent;","import React, { Component } from 'react';\r\n\r\n\r\nclass HeaderComponent extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n               <header>\r\n                    <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\r\n                    <div><a href=\"/React-Frontend-CRUD\" className=\"navbar-brand\">Employee Management App</a></div>\r\n                    </nav>\r\n                </header>  \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HeaderComponent;","import React, { Component } from 'react';\r\n\r\nclass FooterComponent extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <footer className = \"footer\">\r\n                    <span className=\"text-muted\">All Rights Reserved 2021</span>\r\n                </footer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FooterComponent;","import React, { Component } from 'react';\r\n\r\nimport EmployeeService from '../services/EmployeeService';\r\n\r\nclass CreateEmployeeComponent extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            firstName:'',\r\n            lastName:'',\r\n            email:''\r\n        }\r\n        this.changeFirstNameHandler=this.changeFirstNameHandler.bind(this);\r\n        this.changeLastNameHandler=this.changeLastNameHandler.bind(this);\r\n        this.changeEmailHandler=this.changeEmailHandler.bind(this);\r\n        this.saveEmployee=this.saveEmployee.bind(this);\r\n\r\n    }\r\n    saveEmployee=(e)=>{\r\n        e.preventDefault();\r\n        let employee={firstName:this.state.firstName, lastName:this.state.lastName, email:this.state.email};\r\n        console.log('employee =>'+ JSON.stringify(employee));\r\n\r\n        EmployeeService.createEmployee(employee).then((res)=>{\r\n            this.props.history.push('/React-Frontend-CRUD/employees');\r\n        });\r\n    }\r\n    changeFirstNameHandler=(event)=>{\r\n        this.setState({firstName: event.target.value});\r\n    }\r\n    changeLastNameHandler=(event)=>{\r\n        this.setState({lastName: event.target.value});\r\n    }\r\n    changeEmailHandler=(event)=>{\r\n        this.setState({email: event.target.value});\r\n    }\r\n    cancel(){\r\n        this.props.history.push('/React-Frontend-CRUD/employees');\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                        <h3 className=\"text-center\">Add Employee</h3>\r\n                        <div className=\"card-body\">\r\n                            <form>\r\n                                <div className=\"form-group\">\r\n                                    <label>First name: </label>\r\n                                    <input placeholder=\"First Name\" name=\"firstName\" className=\"form-control\"\r\n                                    value={this.state.firstName} onChange={this.changeFirstNameHandler} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Last name: </label>\r\n                                    <input placeholder=\"First Name\" name=\"lastName\" className=\"form-control\"\r\n                                    value={this.state.lastName} onChange={this.changeLastNameHandler} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Email: </label>\r\n                                    <input placeholder=\"Email\" name=\"email\" className=\"form-control\"\r\n                                    value={this.state.email} onChange={this.changeEmailHandler} />\r\n                                </div>\r\n                                <button className=\"btn btn-success\" onClick={this.saveEmployee}>Save</button>\r\n                                <button className=\"btn btn-danger\" onClick={this.cancel.bind(this)} style={{marginLeft: \"10px\"}}>Cancel</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n               \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CreateEmployeeComponent;","import React, { Component } from 'react';\r\nimport EmployeeService from '../services/EmployeeService';\r\n\r\nclass UpdateEmployeeComponent extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            id: this.props.match.params.id,\r\n            firstName:'',\r\n            lastName:'',\r\n            email:''\r\n        }\r\n        this.changeFirstNameHandler=this.changeFirstNameHandler.bind(this);\r\n        this.changeLastNameHandler=this.changeLastNameHandler.bind(this);\r\n        this.changeEmailHandler=this.changeEmailHandler.bind(this);\r\n        this.updateEmployee=this.updateEmployee.bind(this);\r\n\r\n    }\r\n    componentDidMount(){\r\n        EmployeeService.getEmployeeById(this.state.id).then((res)=>{\r\n            let employee=res.data;\r\n            this.setState({firstName:employee.firstName,\r\n                 lastName:employee.lastName, \r\n                 email:employee.email});\r\n        });\r\n    }\r\n    updateEmployee=(e)=>{\r\n        e.preventDefault();\r\n        let employee={firstName:this.state.firstName, lastName:this.state.lastName, email:this.state.email};\r\n        console.log('employee =>'+ JSON.stringify(employee));\r\n        EmployeeService.updateEmployee(employee, this.state.id).then((res)=>{\r\n            this.props.history.push('/React-Frontend-CRUD/employees');\r\n        });\r\n\r\n    }\r\n    changeFirstNameHandler=(event)=>{\r\n        this.setState({firstName: event.target.value});\r\n    }\r\n    changeLastNameHandler=(event)=>{\r\n        this.setState({lastName: event.target.value});\r\n    }\r\n    changeEmailHandler=(event)=>{\r\n        this.setState({email: event.target.value});\r\n    }\r\n    cancel(){\r\n        this.props.history.push('/React-Frontend-CRUD/employees');\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                        <h3 className=\"text-center\">Update Employee</h3>\r\n                        <div className=\"card-body\">\r\n                            <form>\r\n                                <div className=\"form-group\">\r\n                                    <label>First name: </label>\r\n                                    <input placeholder=\"First Name\" name=\"firstName\" className=\"form-control\"\r\n                                    value={this.state.firstName} onChange={this.changeFirstNameHandler} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Last name: </label>\r\n                                    <input placeholder=\"First Name\" name=\"lastName\" className=\"form-control\"\r\n                                    value={this.state.lastName} onChange={this.changeLastNameHandler} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Email: </label>\r\n                                    <input placeholder=\"Email\" name=\"email\" className=\"form-control\"\r\n                                    value={this.state.email} onChange={this.changeEmailHandler} />\r\n                                </div>\r\n                                <button className=\"btn btn-success\" onClick={this.updateEmployee}>Save</button>\r\n                                <button className=\"btn btn-danger\" onClick={this.cancel.bind(this)} style={{marginLeft: \"10px\"}}>Cancel</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n               \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default UpdateEmployeeComponent;","import React, { Component } from 'react';\r\nimport EmployeeService from '../services/EmployeeService';\r\n\r\nclass ViewEmployeeComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            employee: {}\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        EmployeeService.getEmployeeById(this.state.id).then( res => {\r\n            this.setState({employee: res.data});\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <br></br>\r\n                <div className = \"card col-md-6 offset-md-3\">\r\n                    <h3 className = \"text-center\"> View Employee Details</h3>\r\n                    <div className = \"card-body\">\r\n                        <div className = \"row\">\r\n                            <label className = \"font-weight-bold\"> Employee First Name:&nbsp; </label>\r\n                            <div> { this.state.employee.firstName }</div>\r\n                        </div>\r\n                        <div className = \"row\">\r\n                            <label className = \"font-weight-bold\"> Employee Last Name:&nbsp; </label>\r\n                            <div> { this.state.employee.lastName }</div>\r\n                        </div>\r\n                        <div className = \"row\">\r\n                            <label className = \"font-weight-bold\"> Employee Email:&nbsp; </label>\r\n                            <div> { this.state.employee.email }</div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewEmployeeComponent\r\n","\nimport './App.css';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport ListEmployeeComponent from './components/ListEmployeeComponent';\nimport HeaderComponent from './components/HeaderComponent';\nimport FooterComponent from './components/FooterComponent';\nimport CreateEmployeeComponent from './components/CreateEmployeeComponent';\nimport UpdateEmployeeComponent from './components/UpdateEmployeeComponent';\nimport ViewEmployeeComponent from './components/ViewEmployeeComponent';\n\nfunction App() {\n  return (\n    <div>\n      <Router>\n            <HeaderComponent/>\n              <div className=\"container\">\n                <Switch>\n                  <Route path=\"/\" exact component={ListEmployeeComponent}/>\n                  <Route path=\"/React-Frontend-CRUD\" exact component={ListEmployeeComponent}/>\n                  <Route path=\"/React-Frontend-CRUD/employees\" component={ListEmployeeComponent}/>\n                  <Route path=\"/React-Frontend-CRUD/add-employee\" component={CreateEmployeeComponent}/>\n                  <Route path=\"/React-Frontend-CRUD/update-employee/:id\" component={UpdateEmployeeComponent}/>\n                  <Route path=\"/React-Frontend-CRUD/view-employee/:id\" component={ViewEmployeeComponent}/>\n                  \n                </Switch>\n              </div>\n            <FooterComponent/>\n        </Router>\n    </div>\n   \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}